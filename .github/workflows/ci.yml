name: CI
on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  NIX_CACHE: clemenscodes
  NIX_DEV_PROFILE: w3mem

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v14
        with:
          name: ${{ env.NIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Cache flake inputs
        run: |
          nix flake archive --json --accept-flake-config \
            | jq -r '.path,(.inputs|to_entries[].value.path)' \
            | cachix push ${{ env.NIX_CACHE }}
      - name: Cache development shell
        run: |
          nix develop --accept-flake-config \
            --profile ${{ env.NIX_DEV_PROFILE }} \
            -c true
          cachix push ${{ env.NIX_CACHE }} ${{ env.NIX_DEV_PROFILE }}
      - name: Check flake
        run: nix flake check --accept-flake-config
      - name: Build hyprlayer
        run: |
          nix build .#hyprlayer --accept-flake-config --json \
            | jq -r '.[].outputs | to_entries[].value' \
            | cachix push ${{ env.NIX_CACHE }}
          hyprlayer=$(readlink -f result/bin/hyprlayer)
          echo "hyprlayer=$hyprlayer" >> $GITHUB_ENV
      - name: Build hyprlayer-musl-static
        run: |
          nix build .#hyprlayer-musl-static --accept-flake-config --json \
            | jq -r '.[].outputs | to_entries[].value' \
            | cachix push ${{ env.NIX_CACHE }}
          hyprlayer_musl_static=$(readlink -f result/bin/hyprlayer)
          echo "hyprlayer_musl_static=$hyprlayer_musl_static" >> $GITHUB_ENV
      - name: Prepare release artifacts
        run: |
          mkdir -p release
          cp "$hyprlayer" release/hyprlayer
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/heads/master')
        with:
          name: Downloads
          tag_name: latest
          body: |
            Latest compiled executables from the master branch:

            - `hyprlayer`: Dynamically linked (glibc) Linux build
            - `hyprlayer-musl-staic`: Statically linked musl build
          files: release/*
          token: ${{ secrets.PAT }}
          draft: false
          prerelease: false
          make_latest: true
